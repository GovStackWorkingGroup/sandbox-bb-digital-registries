version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@2.1.2
  helm: circleci/helm@1.0
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  deploy-digital-registries:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - helm/install-helm-client:
          version: v3.2.0
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::463471358064:role/CircleCIRole'
          aws-region: AWS_DEFAULT_REGION
          profile-name: CircleCIRole
          role-session-name: CircleSession
          session-duration: '1800' 
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "${AWS_CLUSTER_NAME}"
          cluster-authentication-role-arn: arn:aws:iam::463471358064:role/CircleCIRole
      - run:
          name: Debug
          command: aws sts get-caller-identity
      - run:
          name: Update kubectl
          command: |
            aws eks update-kubeconfig --region "${AWS_DEFAULT_REGION}" --name "${AWS_CLUSTER_NAME}" --role-arn arn:aws:iam::463471358064:role/CircleCIRole         
      - run:
          name: Install secrets for GDB digital registries BB
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./gdb/values-secrets.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            helm install gdb ./gdb/ -f val.yaml 
      - run:
          name: Install postgres and redis for GDB digital registries BB
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./gdb/values-db.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            export GDB_POSTGRES_ADMIN_SECRET=$(kubectl get secret govstack-gdb-postgres-admin-secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            helm upgrade --install gdb ./gdb/ -f val.yaml                       
      - run:
          name: Install GDB digital registries BB
          command: |
            export NAMESPACE="${AWS_NAMESPACE}"
            cp ./gdb/values-full.yaml val.yaml
            sed -i 's/${NAMESPACE}/'"$NAMESPACE"'/g' val.yaml
            db_name="govstack-gdb-postgres"
            redis_name="govstack-gdb-redis"
            config_name="govstack-gdb-postgres-config"
            admin_secret="govstack-gdb-postgres-admin-secret"
            export ECR_GDB_REPO_NAME=${AWS_ECR_GDB_REPO}
            export POSTGRES_HOST=$(kubectl get service $db_name -o jsonpath='{.spec.clusterIP}' -n $NAMESPACE)
            export POSTGRES_PORT=$(kubectl get service $db_name -o jsonpath='{.spec.ports[0].port}' -n $NAMESPACE)
            export GDB_POSTGRES_DB_NAME=$db_name            
            export GDB_POSTGRES_DB_USER=$(kubectl get configmap $config_name -o jsonpath='{.data.POSTGRES_USER}' -n $NAMESPACE)
            export GDB_POSTGRES_DB_PASSWORD=$(kubectl get secret $admin_secret -o jsonpath='{.data.password}' --namespace $NAMESPACE | base64 --decode)
            export GDB_VER=RC
            export GDB_OAUTH_CLIENT_ID=gdb-client
            export GDB_OAUTH_CLIENT_SECRET=changeme
            export SYSTEM_CODE=CH
            export DEFAULT_LANGUAGE=en
            export YOUR_DOMAIN_NAME=localhost
            export TIME_ZONE=Europe/Zurich
            export SERVICE_HOST=$(kubectl get pod $redis_name --template '{{.status.podIP}}')
            export TRANSLATION_SERVICE_URL=https://translations.test.eregistrations.org 
            helm upgrade --install gdb ./gdb/ -f val.yaml                           
workflows:
  Deploy digital registries BB to EKS cluster:
    jobs:
      - hold:
          type: approval
      - deploy-digital-registries:
          context: aws
          requires: 
            - hold
