version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@2.1.2
  helm: circleci/helm@1.0
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  deploy-information-mediator:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - helm/install-helm-client:
          version: v3.2.0
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::463471358064:role/CircleCIRole'
          aws-region: AWS_DEFAULT_REGION
          profile-name: CircleCIRole
          role-session-name: CircleSession
          session-duration: '1800' 
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: AWS_CLUSTER_NAME
          cluster-authentication-role-arn: arn:aws:iam::463471358064:role/CircleCIRole
      - run:
          name: Debug
          command: aws sts get-caller-identity
      - run:
          name: Update kubectl
          command: |
            echo ${AWS_CLUSTER_NAME}
            aws eks update-kubeconfig --region ${AWS_DEFAULT_REGION} --name ${AWS_CLUSTER_NAME} --role-arn arn:aws:iam::463471358064:role/CircleCIRole         
      - run:
          name: Install db and secrets for GDB digital registries BB
          command: |
            helm upgrade --install gdb ./gdb/ -f ./gdb/values-partial.yaml
      - run:
          name: Install GDB digital registries BB
          command: |
            db_name="gdb-postgres-db"
            redis_name="gdb-redis-db"
            namespace=${AWS_NAMESPACE}
            export NAMESPACE=$namespace
            export POSTGRES_HOST=$(kubectl get DBInstance $db_name -o jsonpath='{.status.endpoint.address}' -n $namespace)
            export POSTGRES_PORT=$(kubectl get DBInstance $db_name -o jsonpath='{.status.endpoint.port}' -n $namespace)
            export GDB_POSTGRES_DB_NAME=$db_name
            export GDB_POSTGRES_DB_USER=$(kubectl get DBInstance $db_name -o jsonpath='{.spec.masterUsername}' -n $namespace)
            secret_name=$(kubectl get DBInstance $db_name -o jsonpath='{.spec.masterUserPassword.name}' -n $namespace)
            export GDB_POSTGRES_DB_PASSWORD=$(kubectl get secret $secret_name -o jsonpath='{.data.password}' --namespace $namespace | base64 --decode)
            export GDB_VER=RC
            export GDB_OAUTH_CLIENT_ID=gdb-client
            export GDB_OAUTH_CLIENT_SECRET=changeme
            export SYSTEM_CODE=CH
            export DEFAULT_LANGUAGE=en
            export YOUR_DOMAIN_NAME=localhost
            export TIME_ZONE=Europe/Zurich
            export SERVICE_HOST=$(kubectl get pod $redis_name --template '{{.status.podIP}}')
            export POSTGRES_HOST=$(kubectl get DBInstance $db_name --template '{{.status.podIP}}')
            export TRANSLATION_SERVICE_URL=https://translations.test.eregistrations.org 
            helm upgrade --install gdb ./gdb/ -f ./gdb/values.yaml                           
workflows:
  Deploy IM to EKS cluster:
    jobs:
      - hold:
          type: approval
      - deploy-information-mediator:
          context: aws
          requires: 
            - hold
